'''
Meta data are stored in a simple dictionary. This makes it possible to add
custom meta data by simply adding them to the input files.
Some meta data are generated by ssg itself and these are reserved.

Reserved meta data keywords
---------------------------

src_file
    The full path and name of the Markdown file the meta data belongs to.

dst_file
    The full paqth and name of the destination HTML file.

template
    Specify the template to use for this file, else use 'index.html'

type
    Type of the content in the file.

URL
    The URL of the rendered html page.


Meta data extensions
--------------------
Meta data extensions extract meta data from the name of the file, the content
of the file, or some other useful data. Meta data extensions all inherit
*MetaParserBase*.
'''
# List of active meta data parsers.
META_PARSERS = list()


def ishidden(metadata):
    '''Check if content has 'status:' 'hidden.

    :param metadata: The meta data of the content to test
    :type metadata: dict
    :return: Whether the post is hidden
    :rtype: bool
    '''
    if 'status' in metadata:
        if metadata['status'] == 'hidden':
            return True
    return False


class MetaParserBase(object):
    '''Base class for metadata parsers. '''
    def __init__(self):
        '''Constructor'''
        pass

    def parse(self, path):
        '''Parse something and return meta data in a dictionary.

        :param path: Path to content.
        :type path: string
        :returns: dict with meta data.
        '''
        raise NotImplementedError('Must be implemented in a derived class')
