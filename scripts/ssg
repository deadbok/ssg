#! /usr/bin/env python
'''
The main Static Site generator executable is called ```ssg```. This is a Python
command line program.
'''
import os
import argparse
import ssg
from ssg.log import logger
from ssg.settings import SETTINGS


def main():
    '''
    The entry point.
    '''
    # Parse command line
    arg_parser = argparse.ArgumentParser()
    arg_parser.add_argument("-d", "--debug",
                            action="store_true", dest="debug", default=False,
                            help="Print debug information")
    arg_parser.add_argument("-s", "--site_url", help="Set the site URL.")
    arg_parser.add_argument("--write-all", action="store_true",
                            dest="write_all", default=False,
                            help="Write all files, instead of updating."
                            )
    arg_parser.add_argument("-r", "--root", dest="root", default=None,
                            help="Set the root directory of the site. Default is current directory."
                            )
    arg_parser.add_argument("-c", "--create-site", action="store_true",
                            dest="create_site", default=False,
                            help="Create a directory skeleton and config file for a new site. Defaults to current directory."
                            )
    args = arg_parser.parse_args()

    try:
        ssg.init(args.debug, args.root)

        # Should we just create an empty site?
        if args.create_site:
            ssg.create_empty_site(args.root)
        else:
            # Set site URL if specified on the command line
            if not args.site_url == None:
                SETTINGS['SITEURL'] = args.site_url
            logger.info("Static Site Generator V." + ssg.__version__)
            if args.write_all:
                ssg.run(False)
            else:
                ssg.run(True)
    finally:
        ssg.close()


if __name__ == '__main__':
    main()
